<metro:UserControl  xmlns:metro="http://schemas.microsoft.com/netfx/2009/xaml/presentation" 
             x:Class="Xh.FastTrading.Wpf.Views.BuyPurchaseView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:Xh.FastTrading.Wpf.Views"
             mc:Ignorable="d"
             d:DesignHeight="450"
             BorderThickness="0"
             DataContext="{Binding Source={StaticResource Locator},Path=Buying}"
             Style="{DynamicResource UserControl_Shadow}" Width="307" >
    <UserControl.Resources>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>

            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="0.5,0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="BackBorder" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" BorderBrush="{x:Null}">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="BackBorder" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="BackBorder" Value="#30FFFFFF"/>
                                <Setter Property="BorderBrush" TargetName="BackBorder" Value="#30FFFFFF"/>
                            </Trigger>-->
                            <!--<Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" TargetName="BackBorder" Value="#30000000"/>
                                <Setter Property="BorderBrush" TargetName="BackBorder" Value="Black"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Button 样式-->
        <Style x:Key="BtnInfoStyle" TargetType="Button">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#0097A7"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0097A7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0097A7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>
        <StackPanel Orientation="Vertical" Margin="0,0,0,10">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center"  Margin="5,5,0,0" >
                <Label Content="买入" Foreground="Red"  FontSize="16" HorizontalAlignment="Left" />
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center"  Margin="5,5,0,0" Width="282" >
                <Label Content="证券代码" FontSize="13" HorizontalAlignment="Left"/>
                <TextBox  x:Name="txtTableBegin" 
                          Text="{Binding ValidateUI.SecuritiesCode,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                          BorderThickness="0"
                          BorderBrush="{x:Null}" 
                          FontSize="18" 
                          Height="28" 
                          Style="{StaticResource TextBoxStyle}"  
                          Margin="2,-2,10,0"  
                          >
                    <!--<TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SecurityCommand}"  CommandParameter="{Binding ElementName=txtTableBegin}"/>
                    </TextBox.InputBindings>-->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding SecurityCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Border BorderBrush="LightBlue"  BorderThickness="1" Margin="0,0,10,0"/>
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 10 0 0" Width="272" Height="27">
                <TextBox x:Name="txtBuyPrice" Tag="买入价格(元)"
                         FontSize="20"
                         Text="{Binding ValidateUI.CurrentPrice,Mode=TwoWay,UpdateSourceTrigger=LostFocus}"
                         Style="{StaticResource TextBoxStyle}"
                         BorderThickness="0"
                         HorizontalAlignment="Left" 
                         Width="272" 
                         Height="25" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding MaxBuyNumberCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Border BorderBrush="LightGray" HorizontalAlignment="Left" BorderThickness="0,0,0,1" VerticalAlignment="Stretch"  Width="500" />
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,5,0,1" Width="287">
                <Label Content="最大可买数量:" FontSize="15" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                <Label x:Name="lblMaxBuyNumber" Content="{Binding ValidateUI.MaxBuyNumber}" FontSize="15"  HorizontalAlignment="Center" Margin="200 -25 0 0" />
                <Label  Content="股" HorizontalAlignment="Right" FontSize="15" VerticalAlignment="Center" Margin="50 -30 0 0"/>
                <Slider x:Name="tb3"   
                        Minimum="0"
                        Maximum="100" 
                        Margin="4 1"
                        Value="{Binding ValidateUI.ProgressRatio}"
                        Foreground="#00BCD3" 
                        IsSnapToTickEnabled="True">
                    <!--ValueChanged="tb3_ValueChanged"-->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding  ProgressRatioCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Stretch"  Margin="0 3 0 0" Width="277" Height="41">
                <TextBox  x:Name="txtPercentage" 
                          Text="{Binding ValidateUI.Percentage,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                          BorderThickness="0" 
                          BorderBrush="{x:Null}" 
                          FontSize="18" 
                          Style="{StaticResource TextBoxStyle}"  
                          Margin="3 13 0 0" Background="White">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding PercentageCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Border HorizontalAlignment="Left"
                        BorderThickness="0,0,0,1"
                        BorderBrush="LightGray"   
                        Width="80" 
                        Margin="3 0 0 0" />
                <!--<Label Content="%" HorizontalAlignment="Left"    FontSize="15"  Margin="72 -20 0 0 "/>-->
            </StackPanel>
            <StackPanel Orientation="Vertical" >
                <TextBlock Text="1/3" HorizontalAlignment="Left"   FontSize="15"  Margin="95 -25 0 0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#00BCD3"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                      <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding OneThirdCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
                <TextBlock Text="1/2" HorizontalAlignment="Left"   FontSize="15"  Margin="130 -25 0 0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#00BCD3"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                      <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding OneTwoCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
                <TextBlock Text="2/3" HorizontalAlignment="Left"  FontSize="15"   Margin="170 -25 0 0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#00BCD3"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                       <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding TwoThirdCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
                <TextBlock Text="全部" HorizontalAlignment="Left"  FontSize="15"   Margin="240 -25 0 0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#00BCD3"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                       <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding WholeCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
            </StackPanel>
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 30" Height="137">
                <TextBox  x:Name="txtTage" Text="{Binding ValidateUI.BuyAmount}"  BorderThickness="0"  FontSize="18" 
                           Style="{StaticResource TextBoxStyle}" Margin="0,-30,0,0"/>
                <!--Tag="买入数量(股)"-->
                <Label Content="股" HorizontalAlignment="Left" FontSize="15"  Margin="260 -30 0 0"/>
                <Border BorderBrush="LightGray" HorizontalAlignment="Left" BorderThickness="0,0,0,1" VerticalAlignment="Stretch"  Width="300" Margin="5,0,0,0" />
                <Button x:Name="btnBuy" 
                        Content="买  入"
                        FontSize="13" 
                        Style="{StaticResource BtnInfoStyle}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center" 
                        Width="273" 
                        Background="#F5F5F5"
                        Margin="5,20,0,0"
                        Height="26"
                        Command="{Binding BuyCommand}"/>

            </StackPanel>

        </StackPanel>
    </Grid>
</metro:UserControl>
