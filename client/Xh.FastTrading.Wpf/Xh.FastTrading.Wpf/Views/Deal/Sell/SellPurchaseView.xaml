<metro:UserControl  xmlns:metro="http://schemas.microsoft.com/netfx/2009/xaml/presentation" x:Class="Xh.FastTrading.Wpf.Views.SellPurchaseView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:Xh.FastTrading.Wpf.Views"
             DataContext="{Binding Source={StaticResource Locator},Path=Sell}"
             mc:Ignorable="d"
             d:DesignHeight="450"
             BorderThickness="0"
             Style="{DynamicResource UserControl_Shadow}" Width="307">
    <!--TextBox样式-->
    <UserControl.Resources>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="0.5,0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="BackBorder" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" BorderBrush="{x:Null}">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="BackBorder" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Button 样式-->
        <Style x:Key="BtnInfoStyle" TargetType="Button">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#0097A7"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0097A7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0097A7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid >
        <StackPanel Orientation="Vertical">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center"  Margin="7,5,0,0" >
                <Label Content="卖出" Foreground="Blue"  FontSize="16" HorizontalAlignment="Left" Width="50" />
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center"  Margin="10,5,0,0" Width="277" >
                <Label Content="证券代码" FontSize="13" HorizontalAlignment="Right" Width="60" Margin="0,0,217,0"/>
                <TextBox  x:Name="txtTableBegin"
                          Text="{Binding ValidateUI.SecuritiesCode,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                          BorderThickness="0" 
                          BorderBrush="{x:Null}"
                          FontSize="18" 
                          Height="28" 
                          Style="{StaticResource TextBoxStyle}" Margin="0,-2,0,0" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding SellHQCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Border BorderBrush="LightBlue"  BorderThickness="1" Margin="0,0,10,0"/>
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" Margin="7 10 0 0" Width="305">
                <TextBox Tag="卖出价格(元)"
                         Text="{Binding ValidateUI.SellAveragePrice,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                         FontSize="18"
                         Style="{StaticResource TextBoxStyle}" 
                         HorizontalAlignment="Left" 
                         Width="268">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding MaxSellNumberCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Border BorderBrush="LightGray" HorizontalAlignment="Left" BorderThickness="0 0 0 1" VerticalAlignment="Stretch"  Width="268" />
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,5,0,1" Width="267">
                <Label Content="可卖数量：" HorizontalAlignment="Left" FontSize="15" VerticalAlignment="Bottom"/>
                <Label Content="{Binding ValidateUI.MaxSellNumber}" FontSize="15" HorizontalAlignment="Center" Margin="150 -30 0 0 " />
                <Label Content="股" HorizontalAlignment="Right" FontSize="15"  VerticalAlignment="Stretch" Margin="0,-30,7,1"/>
                <Slider Minimum="0" 
                        Maximum="100"
                        Margin="4 5 0 0" 
                        Value="{Binding ValidateUI.SellProgressRatio}" 
                        Foreground="#00BCD3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding  ProgressRatioCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 3 0 0" Width="312">
                <TextBox  x:Name="txtPercentage"
                          Text="{Binding ValidateUI.ProfitLossRatio,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                          BorderThickness="0" 
                          BorderBrush="{x:Null}"
                          FontSize="18" 
                          Width="80" 
                          HorizontalAlignment="Left" 
                          Margin="15 0"
                          Height="28" 
                          Style="{StaticResource TextBoxStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding PercentageCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Border BorderBrush="LightGray" HorizontalAlignment="Left" BorderThickness="0,0,0,1" Margin="10 -25 0 0" VerticalAlignment="Stretch"  Width="80" />
            </StackPanel>
            <StackPanel  Margin="45 0 0 0" >
                <TextBlock Text="1/3" HorizontalAlignment="Left" FontSize="15" Margin="65,-25,0,0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#00BCD3"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                      <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding OneThirdCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
                <TextBlock Text="1/2" HorizontalAlignment="Left" FontSize="15"  Margin="100,-25,0,0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#00BCD3"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                      <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding OneTwoCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
                <TextBlock Text="2/3" HorizontalAlignment="Left" FontSize="15"  Margin="135,-25,0,0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#00BCD3"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                       <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding TwoThirdCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
                <TextBlock Text="全部" HorizontalAlignment="Right" FontSize="15" Margin="0 -25 20 0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#00BCD3"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                       <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding WholeCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,21,0,0" Width="267" >
                <TextBox Tag="卖出数量(股)-可卖数量:" 
                         Text="{Binding ValidateUI.SellAmount}"
                         HorizontalAlignment="Left" 
                         Style="{StaticResource TextBoxStyle}" 
                         FontSize="18" 
                         Width="200" />
                <Label Content="股" HorizontalAlignment="Left" FontSize="13"  Margin="230,-24,0,0"/>
                <Border BorderBrush="LightGray" HorizontalAlignment="Left" BorderThickness="0,0,0,1" VerticalAlignment="Stretch"  Width="255" Margin="5,0,0,0"/>
                <Button x:Name="btnSell" 
                        Command="{Binding SellCommand}" 
                        Content="卖  出" FontSize="13" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Center"
                        Width="255"
                        
                        Style="{StaticResource BtnInfoStyle}"  
                        Background="#F5F5F5" 
                        Margin="5,13,0,0" 
                        Height="27"
                        />
            </StackPanel>

        </StackPanel>
    </Grid>
</metro:UserControl>
