<Metro:UserControl  x:Class="Xh.FastTrading.Wpf.Views.SystemManage.AccountManageDetailView"
             xmlns:Metro="http://schemas.microsoft.com/netfx/2009/xaml/presentation" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Xh.FastTrading.Wpf.Views.SystemManage" 
             xmlns:sdk="http://schemas.microsoft.com/netfx/2007/xaml/presentation"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             DataContext="{Binding Source={StaticResource Locator},Path=Account}"
             mc:Ignorable="d" 
             d:DesignHeight="450" 
             d:DesignWidth="1400"
             Style="{DynamicResource UserControl_Shadow}">
    <Metro:UserControl.Resources>
        <Style x:Key="BtnInfoStyle" TargetType="Button">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#FF4081"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0097A7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0097A7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Metro:UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal"   Margin="10">
            <Button Content="新增" Command="{Binding AddPopupCommand}" Foreground="White" Style="{StaticResource BtnInfoStyle}" Width="100"/>
            <!--<Button Content="新增" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" Foreground="White" Style="{StaticResource BtnInfoStyle}" Width="100"/>-->
            <Button Content="修改" Command="{Binding ModifyPopupCommand}"  Foreground="White" Style="{StaticResource BtnInfoStyle}" Width="100" Margin="15,0,0,0"/>
            <Button Content="同步" Command="{Binding SynchronousCommand}" Foreground="White" Style="{StaticResource BtnInfoStyle}" Width="100" Margin="15,0,0,0"/>
            <Button Content="全部同步" Foreground="White" Style="{StaticResource BtnInfoStyle}" Width="100" Margin="15,0,0,0"/>
            <Button Content="停用" Command="{Binding RevStopCommand}"   Foreground="White" Style="{StaticResource BtnInfoStyle}" Width="100" Margin="15,0,0,0"/>
            <Button Content="删除" Command="{Binding DelCommand}" Foreground="White" Style="{StaticResource BtnInfoStyle}" Width="100" Margin="15,0,0,0"/>
            <Button Content="设置限买" Command="{Binding LimitTradingCommand}" Foreground="White" Style="{StaticResource BtnInfoStyle}" Width="100" Margin="230,0,0,0"/>
            <Button Content="取消限买"  Foreground="White" Style="{StaticResource BtnInfoStyle}" Width="100" Margin="15,0,0,0"/>
        </StackPanel>
        <StackPanel Grid.Row="1" Orientation="Horizontal"   Margin="10">
            <!--<TextBox  Tag="请输入搜索内容" Style="{StaticResource TextBoxStyle}" Text="{Binding SearchText,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Height="30" FontSize="15" Width="400" Foreground="LightGray" >
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding  SearchContent}" Key="enter"/>
                </TextBox.InputBindings>  
            </TextBox>-->
            <TextBox  Tag="请输入搜索内容" 
                      Style="{StaticResource TextBoxStyle}" 
                      Text="{Binding ValidateUI.Code,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                      Height="30" FontSize="15" Width="400" 
                      Foreground="LightGray" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding SearchCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </StackPanel>

        <ScrollViewer Grid.Row="2"
                      Width="auto" 
                      BorderBrush="Transparent" 
                      BorderThickness="0" 
                      Style="{DynamicResource for_scrollviewer}"  
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Auto">
            <StackPanel Grid.Row="2" Width="2000" HorizontalAlignment="Left" Margin="0 10">
                <DataGrid  x:Name="dataGridFert" AutoGenerateColumns="False" IsReadOnly="True" 
                           GridLinesVisibility="None"  RowHeaderWidth="0" BorderThickness="0" 
                          CanUserDeleteRows="False" CanUserAddRows="False" Margin="0,0,46,0" 
                          ItemsSource="{Binding List}"
                          SelectedItem="{Binding SelectedRow}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="代码" Width="auto" Binding="{Binding Code}"/>
                        <DataGridTextColumn Header="名称" Width="auto" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="备注" Width="auto" Binding="{Binding Remarks}"/>
                        <DataGridTextColumn Header="限买" Width="auto" Binding="{Binding LimitBuy}"/>
                        <DataGridTextColumn Header="限买股票" Width="auto" Binding="{Binding LimitBuyShare}"/>
                        <DataGridTextColumn Header="佣金率" Width="auto" Binding="{Binding CommissionRate}"/>
                        <DataGridTextColumn Header="单票限制" Width="auto" Binding="{Binding SingleTicketLimit}"/>
                        <DataGridTextColumn Header="创业板单票限制" Width="auto" Binding="{Binding GemSingleTicketLimit}"/>
                        <DataGridTextColumn Header="创业板限制" Width="auto" Binding="{Binding GemLimit}"/>
                        <DataGridTextColumn Header="资产预警线" Width="auto" Binding="{Binding AssetWarningLine}"/>
                        <DataGridTextColumn Header="当前资产" Width="auto" Binding="{Binding CurrentAssets}"/>
                        <DataGridTextColumn Header="现金" Width="auto" Binding="{Binding Cash}"/>
                        <DataGridTextColumn Header="可用" Width="auto" Binding="{Binding Available}"/>
                        <DataGridTextColumn Header="账户市值" Width="auto" Binding="{Binding AccountMarketValue}"/>
                        <DataGridTextColumn Header="系统账户" Width="auto" Binding="{Binding SystemAccount}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Metro:UserControl>
