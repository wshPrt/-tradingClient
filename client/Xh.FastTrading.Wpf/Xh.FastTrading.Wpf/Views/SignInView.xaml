<Window x:Class="Xh.FastTrading.Wpf.Views.SignInView"
        xmlns:Metro="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:c="clr-namespace:Xh.FastTrading.Wpf.Common.Commands" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:Y="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:event="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:behaviors="clr-namespace:Xh.FastTrading.Wpf.Common.Untils"
        mc:Ignorable="d"
        Height="651"
        Width="984"
        WindowStyle="None"
        DataContext="{Binding Source={StaticResource Locator},Path=Login}"
        
        >
    <Window.Effect>
        <DropShadowEffect BlurRadius="10" Color="#FF858484" Direction="90" ShadowDepth="1"/>
    </Window.Effect>

    <Metro:Window.Resources>
        <!--CheckBox 样式-->
        <Style x:Key="chkBullet" TargetType="CheckBox">
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#999"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Width="60" Height="20" CornerRadius="10" Background="{TemplateBinding Background}" >
                            <Grid>
                                <Border x:Name="border" Width="18" Height="18" CornerRadius="9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="1 0" Background="White">
                                    <Border.RenderTransform>
                                        <TranslateTransform  X="0"/>
                                    </Border.RenderTransform>
                                </Border>
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Margin="9 0" VerticalAlignment="Center" Foreground="White" >
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="18"></TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"  Value="true">
                                <Setter Property="Text" TargetName="txt" Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Background" TargetName="border" Value="#6089D4"/>
                                <Setter Property="Background" TargetName="txt" Value="#6089D4"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="40" Duration="00:00:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="18" Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Text" TargetName="txt" Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBoxSwitchStyle" TargetType="CheckBox">
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="/MESToolIntegration;component/Fonts/#iconfont"/>
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Width="54" Name="CheckTrueBG" Height="22" BorderThickness="1" Background="#FFFFFF"  CornerRadius="10" BorderBrush="#ACACAC" >
                            <Grid>
                                <Border BorderThickness="1" Background="#ACACAC" x:Name="border" Width="20" Height="20" CornerRadius="9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0"  >
                                    <Border.RenderTransform>
                                        <TranslateTransform  X="1"/>
                                    </Border.RenderTransform>
                                </Border>
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="iconfont"  FontSize="{TemplateBinding FontSize}" Margin="6.996,2.798,0,2.798" VerticalAlignment="Stretch" Foreground="#ACACAC" HorizontalAlignment="Left" d:LayoutOverrides="Height" >
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform   X="17"></TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="CheckTrueBG"  Value="#0C9FFF"/>
                                <Setter Property="Foreground" TargetName="txt"  Value="#FFFFFF"/>
                                <Setter Property="Background" TargetName="border"  Value="#FFFFFF"/>
                                <Setter Property="Text" TargetName="txt" Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="32" Duration="00:00:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="17" Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Text" TargetName="txt" Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--PasswordBox 样式-->
        <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <TextBlock x:Name="water" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="LightGray" FontSize="{TemplateBinding FontSize}"
                                        Text="密码" Visibility="Hidden"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="false"/>
                                    <Condition Property="ExtentWidth" Value="0" SourceName="PART_ContentHost"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" TargetName="water"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBox 样式-->
        <Style x:Key="textBoxUserStyle" TargetType="TextBox">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsFocused" Value="False"></Condition>
                        <Condition Property="Text" Value=""></Condition>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background">
                        <Setter.Value>
                            <VisualBrush AlignmentX="Left" AlignmentY="Top" Stretch="None">
                                <VisualBrush.Visual>
                                    <TextBlock Padding="5,2" Background="Transparent" Foreground="Silver" FontSize="17">用户名</TextBlock>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
            </Style.Triggers>

        </Style>

        <!--BtnInfoStyle 样式-->
        <Style x:Key="BtnInfoStyle" TargetType="Button">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0097a7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0097a7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--关闭样式-->
        <Style x:Key="btnCloseStyle" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" BorderBrush="White"  Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Metro:Window.Resources>
    <event:Interaction.Behaviors>
        <behaviors:WindowCloseBehaviour Close="{Binding ToClose}"/>
    </event:Interaction.Behaviors>
    <Grid FocusManager.FocusedElement="{Binding ElementName=txtUser}">
        <Grid.Background>
            <ImageBrush ImageSource="/Sup-Trade;component/Common/Images/Login.png" Stretch="UniformToFill" />
        </Grid.Background>

        <Border Margin="556,164,112,105"
                 BorderThickness="2"
                 HorizontalAlignment="Center" Width="308">
            <Border.Background>
                <ImageBrush/>
            </Border.Background>
            <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Offset="0.0" Color="LightGray"></GradientStop>
                    <GradientStop Offset="0.25" Color="LightGray"></GradientStop>
                    <GradientStop Offset="0.75" Color="LightGray"></GradientStop>
                    <GradientStop Offset="1.0" Color="LightGray"></GradientStop>
                </LinearGradientBrush>
            </Border.BorderBrush>

            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Stretch" Orientation="Vertical" Width="290" Height="370"  >
                <Button Height="40" Width="40" Style="{DynamicResource btnCloseStyle}" HorizontalAlignment="Right"   FontSize="16" Margin="0,0,3,0" Click="Button_Click">
                    <Button.Background>
                        <ImageBrush  ImageSource="/Sup-Trade;component/Common/Images/close.png" Stretch="UniformToFill"/>
                    </Button.Background>

                </Button>

                <TextBlock HorizontalAlignment="Center" Text="登 录"  FontFamily="/Sup-Trade;component/Common/Fonts/#ElegantIcons"  FontSize="20" Foreground="Gray" Height="25" Margin="10,2,0,0"/>
                <TextBox  x:Name="txtUser"  
                          Text="{Binding LoginInfo.UserName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  
                          Height="30" FontSize="17" Foreground="LightGray"  
                          BorderBrush="LightGray" Margin="20,10,10,0" 
                          BorderThickness="0,0,0,1" Tag="user2" 
                          Style="{StaticResource textBoxUserStyle}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SignCommand}" CommandParameter="{Binding ElementName=txtUser}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <PasswordBox  x:Name="txtPassWord"  Height="30" Foreground="LightGray" FontSize="17" 
                     BorderBrush="LightGray" Margin="20,40,10,0" Style="{DynamicResource PasswordBoxStyle}" BorderThickness="0,0,0,1"
                     c:PasswordBoxHelper.Password="{Binding LoginInfo.Password,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                     c:PasswordBoxHelper.Attach="True">
                    <PasswordBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SignCommand}" CommandParameter="{Binding ElementName=txtPassWord}"/>
                    </PasswordBox.InputBindings>
                </PasswordBox>

                <TextBlock Text="记住用户"  FontSize="15" Foreground="Black" Height="25" Margin="20,20,204,0"/>
                <CheckBox Height="25 " x:Name="chk" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="LightGray" 
                      Margin="0 -26 20 0" Style="{StaticResource CheckBoxSwitchStyle}" Background="#BDBDBD" 
                          Content="关" Tag="开" IsChecked="{Binding LoginInfo.UserChecked,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                <Button x:Name="SignIn"  Content="登 录" Command="{Binding SignCommand}" Background="LightGray" Style="{StaticResource BtnInfoStyle}" Height="37" Margin="20,15,10,15" Width="Auto"/>
                <TextBlock Text="{Binding LoginInfo.Report}"  TextAlignment="Center" Foreground="Red" FontSize="17" HorizontalAlignment="Left"  Height="28" Margin="11,-15" Width="286" />

            </StackPanel>
        </Border>
    </Grid>
</Window>
